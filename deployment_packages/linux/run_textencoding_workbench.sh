#!/bin/bash
# Text Encoding Workbench v2.0 - Launcher Script
# Para executar o aplicativo sem instala√ß√£o

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$(dirname "$SCRIPT_DIR")")"

echo "üöÄ Iniciando Text Encoding Workbench v2.0"
echo "üìç Diret√≥rio do projeto: $PROJECT_ROOT"

# Verifica se o Java est√° dispon√≠vel
if ! command -v java &> /dev/null; then
    echo "‚ùå Java n√£o encontrado. Por favor, instale Java 21 ou superior."
    exit 1
fi

# Verifica a vers√£o do Java
JAVA_VERSION=$(java -version 2>&1 | awk -F '"' '/version/ {print $2}' | awk -F '.' '{print $1}')
if [ "$JAVA_VERSION" -lt 21 ]; then
    echo "‚ùå Java 21+ requerido. Vers√£o atual: $JAVA_VERSION"
    exit 1
fi

echo "‚úÖ Java $JAVA_VERSION detectado"

# Configura o classpath e bibliotecas nativas
JAR_PATH="$PROJECT_ROOT/desktop_workbench/target/demojibake-desktop-2.0.0.jar"
NATIVE_LIB_PATH="$PROJECT_ROOT/native_libraries/current"

if [ ! -f "$JAR_PATH" ]; then
    echo "‚ùå JAR n√£o encontrado: $JAR_PATH"
    echo "Execute 'mvn clean package' no diret√≥rio desktop_workbench primeiro."
    exit 1
fi

if [ ! -d "$NATIVE_LIB_PATH" ]; then
    echo "‚ùå Bibliotecas nativas n√£o encontradas: $NATIVE_LIB_PATH"
    echo "Execute './build.sh' no diret√≥rio character_analysis_engine primeiro."
    exit 1
fi

echo "‚úÖ Arquivos do aplicativo encontrados"
echo "üîß Iniciando aplicativo..."

# Executa o aplicativo com otimiza√ß√µes
java \
    -Djava.library.path="$NATIVE_LIB_PATH" \
    -Dprism.order=d3d,es2,sw \
    -Dprism.vsync=true \
    -Djavafx.animation.fullspeed=true \
    -Djavafx.animation.pulse=60 \
    -XX:+UseG1GC \
    -XX:MaxGCPauseMillis=10 \
    --module-path /usr/share/openjfx/lib \
    --add-modules javafx.controls,javafx.fxml \
    -jar "$JAR_PATH" "$@"

echo "üëã Text Encoding Workbench finalizado"
